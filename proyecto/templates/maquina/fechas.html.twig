{% extends 'layout/base.html.twig' %}

{% block title %}Seleccionar Reserva{% endblock %}

{% block content %}
<div class="calendar-container">
  <h1>Reservar máquina: <span>{{ maquina.nombre }}</span></h1>
  <p class="calendar-info">Mínimo de días requeridos: <strong>{{ maquina.minimoDias }}</strong></p>

  <form method="POST" action="{{ path('app_reserva_nueva', { id: maquina.id }) }}">
    <label for="fecha_inicio_display" class="form-label">Seleccionar intervalo de fechas:</label><br>
    {# Este input es el que ve el usuario #}
    <input type="text" id="fecha_inicio_display" name="fecha_inicio_display" placeholder="Fecha inicio" class="form-control">
    {# Estos inputs son los que se envían al servidor #}
    <input type="hidden" id="fecha_inicio" name="fecha_inicio">
    <input type="hidden" id="fecha_fin" name="fecha_fin">
    <div class="error" id="error-msg"></div>

    {% if is_granted('ROLE_EMPLEADO') %}
      <div class="form-group mt-3">
        <label for="dni_cliente_empleado" class="form-label">DNI del Cliente:</label>
        <input type="text" id="dni_cliente_empleado" name="dni_cliente_empleado" class="form-control" placeholder="Ingrese DNI del cliente" required>
        <small class="form-text text-muted">Si el empleado realiza la reserva para un cliente presencialmente, ingrese el DNI del cliente.</small>
      </div>
    {% endif %}
    <button type="submit" id="submit-btn">Seleccionar reserva</button>
  </form>
</div>

{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src="{{ asset('flatpickr/flatpickr.js') }}"></script>
<script>
  const reservas = {{ reservas|map(r => {
    fechaInicio: r.fechaInicio|date('Y-m-d'),
    fechaFin: r.fechaFin|date('Y-m-d')
})|json_encode|raw }};
  const minimoDias = {{ maquina.minimoDias }};
  const errorMsg = document.getElementById("error-msg");
  // Cambiado a fecha_inicio_display para el input visible
  const fechaInicioDisplayInput = document.getElementById("fecha_inicio_display");
  const fechaInicioHiddenInput = document.getElementById("fecha_inicio"); // Input oculto para el inicio
  const fechaFinHiddenInput = document.getElementById("fecha_fin"); // Input oculto para el fin
  const submitBtn = document.getElementById("submit-btn");

  const fechasOcupadas = [];

  for (const r of reservas) {
    const start = new Date(r.fechaInicio);
    const end = new Date(r.fechaFin);
    for (let d = new Date(start); d <= end; d.setDate(d.getDate() + 1)) {
      fechasOcupadas.push(d.toISOString().split("T")[0]);
    }
  }

  flatpickr("#fecha_inicio_display", { // Apunta al input visible
    mode: "range",
    dateFormat: "d-m-Y",
    disable: fechasOcupadas,
    minDate: "today",
    onDayCreate: function(dObj, dStr, fp, dayElem) {
      const date = dayElem.dateObj.toISOString().split("T")[0];
      if (fechasOcupadas.includes(date)) {
        dayElem.classList.add("occupied");
      }
    },
    onChange: function(selectedDates, dateStr, instance) {
      errorMsg.textContent = "";

      if (selectedDates.length === 2) {
        const inicio = selectedDates[0];
        const fin = selectedDates[selectedDates.length-1];
        const dias = (fin - inicio) / (1000 * 60 * 60 * 24) + 1;

        let hasOccupiedDatesInSelection = false;
        for (let d = new Date(inicio); d <= fin; d.setDate(d.getDate() + 1)) {
          const dStr = d.toISOString().split("T")[0];
          if (fechasOcupadas.includes(dStr)) {
            hasOccupiedDatesInSelection = true;
            break;
          }
        }

        if (hasOccupiedDatesInSelection) {
          errorMsg.textContent = "El intervalo contiene fechas ocupadas.";
          submitBtn.disabled = true;
          return;
        }

        if (dias < minimoDias) {
          errorMsg.textContent = `Debes reservar al menos ${minimoDias} días.`;
          submitBtn.disabled = true;
          return;
        }

        // Formatea y muestra en el input visible para el usuario
        const formattedStartDate = flatpickr.formatDate(inicio, "d-m-Y");
        const formattedEndDate = flatpickr.formatDate(fin, "d-m-Y");
        fechaInicioDisplayInput.value = `${formattedStartDate} to ${formattedEndDate}`;

        // Asigna los valores para los inputs ocultos (formato YYYY-MM-DD para el backend)
        fechaInicioHiddenInput.value = flatpickr.formatDate(inicio, "Y-m-d");
        fechaFinHiddenInput.value = flatpickr.formatDate(fin, "Y-m-d");

        submitBtn.disabled = false;
      } else {
        // Si se selecciona menos de 2 fechas (ej. usuario borró la selección)
        fechaInicioDisplayInput.value = ""; // Limpia la visualización
        fechaInicioHiddenInput.value = ""; // Limpia el input oculto de inicio
        fechaFinHiddenInput.value = ""; // Limpia el input oculto de fin
        submitBtn.disabled = true;
      }
    }
  });
</script>
{% endblock %}

{% block stylesheets %}

{{ parent() }}
<link rel="stylesheet" href="{{ asset('flatpickr/flatpickr.css') }}" />
<style>
  .calendar-container {
    max-width: 600px;
    margin: 3rem auto;
    padding: 30px;
    background-color: #ffffff;
    border-radius: 10px;
    box-shadow: 0 8px 16px rgba(0,0,0,0.1);
    border: 1px solid #e0e0e0;
  }
  h1 {
    color: #007bff;
    font-size: 2rem;
    margin-bottom: 1.5rem;
    text-align: center;
    font-weight: 600;
  }
  .calendar-info {
    margin-bottom: 1.5rem;
    font-size: 1.1rem;
    color: #555;
    text-align: center;
    line-height: 1.5;
  }
  .calendar-info strong {
    color: #28a745;
  }
  .form-group {
    margin-bottom: 1.5rem;
  }
  .form-label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 600;
    color: #333;
    font-size: 1rem;
  }
  .form-control {
    width: 100%;
    padding: 0.85rem 1rem;
    border: 1px solid #ced4da;
    border-radius: 0.3rem;
    font-size: 1rem;
    line-height: 1.5;
    color: #495057;
    background-color: #fff;
    background-clip: padding-box;
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    box-sizing: border-box;
  }
  .form-control:focus {
    border-color: #80bdff;
    outline: 0;
    box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
  }
  .error {
    color: #dc3545;
    background-color:#cccccc;
    border: 1px solid#cccccc;
    border-radius: 0.25rem;
    padding: 0.75rem 1.25rem;
    margin-top: 1.5rem;
    text-align: center;
    font-weight: 500;
  }
  .flatpickr-day.occupied {
    background-color: #f44336 !important;
    color: white !important;
    cursor: not-allowed;
  }
  .flatpickr-day.occupied.startRange,
  .flatpickr-day.occupied.endRange,
  .flatpickr-day.occupied.inRange {
    background-color: #e0281b !important;
  }
  .flatpickr-calendar {
      box-shadow: 0 6px 15px rgba(0,0,0,0.15);
      border-radius: 8px;
  }
  #submit-btn {
    display: block;
    width: 100%;
    padding: 1rem 1.25rem;
    margin-top: 2rem;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 0.3rem;
    font-size: 1.15rem;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out, transform 0.1s ease-in-out;
    box-shadow: 0 4px 8px rgba(0,123,255,0.2);
  }
  #submit-btn:hover:not(:disabled) {
    background-color: #0056b3;
    transform: translateY(-2px);
  }
  #submit-btn:disabled {
    background-color: #cccccc;
    cursor: not-allowed;
    box-shadow: none;
  }
</style>
{% endblock %}